- test: cmark
  c_tests: directed_tests/c/cmark.c
  gcc_opts: -g -O3 -funroll-all-loops
  iterations: 1
  rtl_test: core_base_test_benchmark

- test: cmark_iccm
  c_tests: directed_tests/c/cmark_iccm.c
  gcc_opts: -g -O3 -funroll-all-loops
  iterations: 1
  rtl_test: core_base_test_benchmark

- test: c_sample
  c_tests: directed_tests/c/c_sample.c
  gcc_opts: -g -O3 -funroll-all-loops
  iterations: 1
  rtl_test: core_base_test_benchmark

- test: hello_world
  asm_tests: directed_tests/asm/hello_world.s
  iterations: 1
  rtl_test: core_base_test_benchmark

- test: hello_world_dccm
  asm_tests: directed_tests/asm/hello_world_dccm.s
  iterations: 1
  rtl_test: core_base_test_benchmark

- test: riscv_arithmetic_basic_test_0
  asm_tests: directed_tests/asm/riscv_sample_test/riscv_arithmetic_basic_test_0.S
  iterations: 1
  rtl_test: core_base_test_benchmark

- test: riscv_arithmetic_basic_test
  description: >
    Arithmetic instruction test, no load/store/branch instructions
  gen_opts: >
    +instr_cnt=1000
    +num_of_sub_program=0
    +directed_instr_0=riscv_int_numeric_corner_stream,4
    +no_fence=1
    +no_data_page=1
    +no_branch_jump=1
    +boot_mode=m
    +no_csr_instr=1
  iterations: 2
  gen_test: riscv_instr_base_test
  rtl_test: core_base_test

  # Please enable this test for your RTL simulation
- test: riscv_csr_test
  description: >
    Test all CSR instructions on all implemented CSR registers
  iterations: 1
  no_iss: 1
  rtl_test: core_csr_test
  no_post_compare: 1

- test: riscv_full_interrupt_test
  description: >
    Random instruction test with complete interrupt handling
  iterations: 1
  gen_test: riscv_rand_instr_test
  gen_opts: >
    +enable_interrupt=1
    +gen_exceptions=1
  rtl_test: core_base_test
  sim_opts: >
    +enable_irq_seq=1
